"use strict";(self.webpackChunkpaulohernane_me=self.webpackChunkpaulohernane_me||[]).push([[7879],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>y});var o=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,o,n=function(e,t){if(null==e)return{};var r,o,n={},a=Object.keys(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=o.createContext({}),l=function(e){var t=o.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},p=function(e){var t=l(e.components);return o.createElement(s.Provider,{value:t},e.children)},u="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=l(r),d=n,y=u["".concat(s,".").concat(d)]||u[d]||f[d]||a;return r?o.createElement(y,c(c({ref:t},p),{},{components:r})):o.createElement(y,c({ref:t},p))}));function y(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=r.length,c=new Array(a);c[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[u]="string"==typeof e?e:n,c[1]=i;for(var l=2;l<a;l++)c[l]=r[l];return o.createElement.apply(null,c)}return o.createElement.apply(null,r)}d.displayName="MDXCreateElement"},309:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>c,default:()=>f,frontMatter:()=>a,metadata:()=>i,toc:()=>l});var o=r(7462),n=(r(7294),r(3905));const a={slug:"day-16-100-days-of-code",title:"Day 16 of 100 Days of Code",description:"Hard day of work ;D",image:"https://github.com/rickmff/100DiasDeCodigo-landing/blob/master/public/thumb.png",authors:"paulohfs",tags:["100DaysOfCode"]},c=void 0,i={permalink:"/blog/day-16-100-days-of-code",source:"@site/blog/2023-08-29-day-15-100-days-of-code.md",title:"Day 16 of 100 Days of Code",description:"Hard day of work ;D",date:"2023-08-29T00:00:00.000Z",formattedDate:"August 29, 2023",tags:[{label:"100DaysOfCode",permalink:"/blog/tags/100-days-of-code"}],readingTime:.325,hasTruncateMarker:!1,authors:[{name:"Paulo Hernane",title:"Software Engineer",url:"https://github.com/paulohfs",imageURL:"https://github.com/paulohfs.png",key:"paulohfs"}],frontMatter:{slug:"day-16-100-days-of-code",title:"Day 16 of 100 Days of Code",description:"Hard day of work ;D",image:"https://github.com/rickmff/100DiasDeCodigo-landing/blob/master/public/thumb.png",authors:"paulohfs",tags:["100DaysOfCode"]},prevItem:{title:"Day 16 of 100 Days of Code",permalink:"/blog/day-16-100-days-of-code"},nextItem:{title:"Day 14 of 100 Days of Code",permalink:"/blog/day-14-100-days-of-code"}},s={authorsImageUrls:[void 0]},l=[],p={toc:l},u="wrapper";function f(e){let{components:t,...r}=e;return(0,n.kt)(u,(0,o.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"Today I start to build a prof of concept to test some concepts like Idempotency, Batch Processing, Circuit Breaker, background jobs, and message queues. I build this project relearn how to configure node with typescript and build the project with Dockerfile and run a infra local with docker-compose. ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/PauloHFS/idempotency-poc"},"Here")," you can see the source code. Alongside I start to learn more about IPC (Inter-Process Communication)."))}f.isMDXComponent=!0}}]);