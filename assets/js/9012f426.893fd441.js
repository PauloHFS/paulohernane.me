"use strict";(self.webpackChunkpaulohernane_me=self.webpackChunkpaulohernane_me||[]).push([[838],{5524:n=>{n.exports=JSON.parse('{"label":"Concurrent Programming","permalink":"/my-brain/tags/concurrent-programming","allTagsPath":"/my-brain/tags","count":6,"items":[{"id":"concurrent-programming/basic-synchronization-patterns","title":"Basic Synchronization Patterns","description":"This are the basic synchronization patterns that can be used to solve a variety of synchronization problems.","permalink":"/my-brain/concurrent-programming/basic-synchronization-patterns"},{"id":"concurrent-programming/classical-synchronization-problems","title":"Classical Synchronization Problems","description":"Producer-Consumer Problem","permalink":"/my-brain/concurrent-programming/classical-synchronization-problems"},{"id":"concurrent-programming/concurrency-vs-parallelism","title":"Concurrency vs Parallelism","description":"Alt text","permalink":"/my-brain/concurrent-programming/concurrency-vs-parallelism"},{"id":"go/go-programming-language","title":"Go","description":"This section contains my notes taken from the course Go Programming \u2013 Golang Course with Bonus Projects","permalink":"/my-brain/go/"},{"id":"concurrent-programming/semaphore","title":"Semaphore","description":"Before understand what is a semaphore, we need to understand some concepts:","permalink":"/my-brain/concurrent-programming/semaphore"},{"id":"concurrent-programming/threads-and-process-in-python","title":"Threads and Process in Python","description":"Introduction","permalink":"/my-brain/concurrent-programming/threads-and-process-in-python"}]}')}}]);